{
  "name": "print-it",
  "displayName": "Print It",
  "description": "Wrap a print statment around current word or selection",
  "publisher": "bmalehorn",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/bmalehorn/vscode-print-it"
  },
  "version": "0.1.5",
  "icon": "icon.png",
  "engines": {
    "vscode": "^1.43.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:print-it.PrintIt"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "print-it.PrintIt",
        "title": "Print It"
      }
    ],
    "keybindings": [
      {
        "command": "print-it.PrintIt",
        "key": "alt+[",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "properties": {
        "print-it.default.template": {
          "type": "string",
          "description": "Print statement to show for all other files",
          "default": "console.log(\"{{escaped}}\", {{raw}});"
        },
        "print-it.javascript.template": {
          "type": "string",
          "description": "Print statement to show in javascript files",
          "default": "console.log(\"{{escaped}}\", {{raw}});"
        },
        "print-it.typescript.template": {
          "type": "string",
          "description": "Print statement to show in typescript files",
          "default": "console.log(\"{{escaped}}\", {{raw}});"
        },
        "print-it.typescriptreact.template": {
          "type": "string",
          "description": "Print statement to show in typescriptreact files",
          "default": "console.log(\"{{escaped}}\", {{raw}});"
        },
        "print-it.javascriptreact.template": {
          "type": "string",
          "description": "Print statement to show in javascriptreact files",
          "default": "console.log(\"{{escaped}}\", {{raw}});"
        },
        "print-it.vue.template": {
          "type": "string",
          "description": "Print statement to show in vue files",
          "default": "console.log(\"{{escaped}}\", {{raw}});"
        },
        "print-it.dart.template": {
          "type": "string",
          "description": "Print statement to show in dart files",
          "default": "print(\"{{escaped}} ${ {{raw}} }\");"
        },
        "print-it.python.template": {
          "type": "string",
          "description": "Print statement to show in python files",
          "default": "print(\"{{escaped}}\", {{raw}})"
        },
        "print-it.ruby.template": {
          "type": "string",
          "description": "Print statement to show in ruby files",
          "default": "pp(\"{{escaped}}\", {{raw}})"
        },
        "print-it.java.template": {
          "type": "string",
          "description": "Print statement to show in Java files",
          "default": "System.out.format(\"{{escaped}} %s\\n\", {{raw}});"
        },
        "print-it.kotlin.template": {
          "type": "string",
          "description": "Print statement to show in Kotlin files",
          "default": "System.out.format(\"{{escaped}} %s\\n\", {{raw}})"
        },
        "print-it.php.template": {
          "type": "string",
          "description": "Print statement to show in PHP files",
          "default": "echo \"{{escaped}} \"; print_r({{raw}}); echo \"\\n\";"
        },
        "print-it.erb.template": {
          "type": "string",
          "description": "Print statement to show in erb files",
          "default": "<% pp('{{escaped}}', {{raw}}) %>"
        },
        "print-it.csharp.template": {
          "type": "string",
          "description": "Print statement to show in C# files",
          "default": "Console.WriteLine(\"{{escaped}} {0}\", {{raw}});"
        },
        "print-it.cpp.template": {
          "type": "string",
          "description": "Print statement to show in C++ files",
          "default": "std::cout << \"{{escaped}} \" << {{raw}} << std::endl;"
        },
        "print-it.go.template": {
          "type": "string",
          "description": "Print statement to show in go files",
          "default": "fmt.Printf(\"{{escaped}} %#v\\n\", {{raw}})"
        },
        "print-it.rust.template": {
          "type": "string",
          "description": "Print statement to show in rust files",
          "default": "println!(\"{{escaped}} {:?}\", {{raw}});"
        },
        "print-it.elixir.template": {
          "type": "string",
          "description": "Print statement to show in elixir files",
          "default": "IO.puts \"{{escaped}} \" <> inspect({{raw}})"
        },
        "print-it.shellscript.template": {
          "type": "string",
          "description": "Print statement to show in shellscript files",
          "default": "echo \"{{escaped}} ${{raw}}\""
        },
        "print-it.fish.template": {
          "type": "string",
          "description": "Print statement to show in fish files",
          "default": "echo \"{{escaped}} ${{raw}}\""
        },
        "print-it.addSemicolonInTheEnd": {
          "type": "boolean",
          "description": "Whether to add or not a semicolon in the end of the log message",
          "default": true
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/vscode": "^1.43.0",
    "@typescript-eslint/eslint-plugin": "^3.5.0",
    "@typescript-eslint/parser": "^3.5.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint": "^6.8.0",
    "glob": "^7.1.6",
    "husky": ">=4",
    "lint-staged": ">=10",
    "mocha": "^7.1.1",
    "prettier": "^2.0.2",
    "pretty-quick": "^2.0.1",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0"
  },
  "dependencies": {
    "micromustache": "^7.1.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": [
        "lint-staged"
      ]
    }
  },
  "lint-staged": {
    "*.ts": "eslint --cache --fix",
    "*": "pretty-quick --staged"
  }
}
